<?xml version="1.0" encoding="UTF-8" ?><!-- Created from PDF via Acrobat SaveAsXML --><!-- Mapping Table version: 28-February-2003 --><TaggedPDF-doc><?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:CreatorTool>PScript5.dll Version 5.2.2</xmp:CreatorTool>
         <xmp:ModifyDate>2010-09-07T19:03:20+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-09-07T19:03:20+02:00</xmp:CreateDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>xml</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">''DecFMA64-128 100906</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>i64</rdf:li>
            </rdf:Seq>
         </dc:creator>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Distiller 8.1.0 (Windows)</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/">
         <xmpMM:DocumentID>uuid:a4b13a38-8b86-4196-a6f9-42accb6ac3cb</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:2f6b2b6c-98fd-ec42-902e-39ae0a5a6795</xmpMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?><?xpacket end='r'?><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_0.jpg"/></Figure><Part><Sect><H2>IP Core Product Data Sheet </H2></Sect><Sect><Sect><H3>DFP Fused Multiply‐Add Units DecFMA64/128 </H3></Sect><P>DecFMA64 and DecFMA128 IP core units are first in the market to offer the Fused Multiple-Add function. The FMA unit computes the Multiply-Add operation ±(A×B)±C of three input vector operands. Inputs are encoded in Decimal Interchange Format. The product is fully compliant with the IEEE 754-2008 Standard.  </P><Sect><H5>Key Features </H5><L><LI><LI_Label>⇒ </LI_Label><LI_Title>Full IEEE 754-2008 compliance </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Decimal128 (34 decimal digits) format support </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Decimal Interchange format with Densely Packed Decimal (DPD) encoding support </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Seven rounding modes support </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Automatic pipelining selectable with arbitrary number of stages </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Result is available at every clock cycle </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Overflow, Underflow, Invalid, and Inexact operation flags </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Tested with over 500,000 test cases compliant with IEEE 754-2008 format </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Full DFP accuracy and precision support </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Fully synthesizable with no internal tri-states </LI_Title></LI></L></Sect><Sect><H5>Performance Data </H5><P>The table below summarizes gate-level synthesized performance data in TSMC 90 nm. More detailed performance data can be found in the product technical documentation. </P><Table><TR><TH>Design </TH><TH>Cycle Delay </TH><TH>Area </TH></TR><TR><TD>nS </TD><TD>FO4 </TD><TD>μm2 </TD><TD>NAND2 </TD></TR><TR><TH>DecFMA64 </TH><TD>6.5</TD><TD> 144.4 </TD><TD>235,446.1 </TD><TD>83,421 </TD></TR><TR><TH>DecFMA128 </TH><TD>7.0 </TD><TD>155.5 </TD><TD>471,800.0</TD><TD> 167,163 </TD></TR></Table></Sect><Sect><Sect><H5>Applications </H5><L><LI><LI_Label>⇒ </LI_Label><LI_Title>DFPA units for next generation processors </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>DFPA on-chip co-processors </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>DFPA accelerator boards </LI_Title></LI></L></Sect><Sect><H5>IP Deliverable </H5><P>Deliverable depends on the type of licensing agreement and the negotiated business model. The following items could be included: </P><L><L><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Source code: </LI_Title></LI><L><LI><LI_Label>▪ </LI_Label><LI_Title>VHDL source code </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>VERILOG source code </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Encrypted or plain text EDIF netlist </LI_Title></LI></L></L><LI><LI_Label>⇒ 	</LI_Label><LI_Title>FPGA code versions, optimized for either speed or area </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>VHDL &amp; VERILOG test bench environments </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Full test suites compliant with IEEE 754-2008 standard. </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Technical documentation </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>HDL core specification </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Synthesis scripts </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>IP Core implementation support  </LI_Title></LI></L></Sect><Sect><H5>Configurations </H5><P>DecFMA64/128 can be combined with other SilMinds IP core units to comprise arbitrary decimal coprocessor architectures. Deployment is made easy and reliable through a compact core size, parameterized RTL, and flexible test benches. </P></Sect><Sect><H4>Product Verification </H4><P>This product has been verified using an innovative and efficient constraint driven test vector generation tool. The test vectors cover all valid cases in conformance with the IEEE 754-2008 standard. </P></Sect></Sect><Sect><H5>Symbol &amp; Block Diagram </H5><Sect><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_1.jpg"/></Figure><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_2.jpg"/>Formulation and Detection</Figure>EA, SA, EB,</P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_3.jpg"/></Figure><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_4.jpg"/></Figure>Op SB, EC, </P><P>RM SV </P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_5.jpg"/></Figure><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_6.jpg"/></Figure><P>Exception Handler </P><P>Decimal FMA Core </P></Sect><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_7.jpg"/></Figure>Sb INVF UF </P><Sect/><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_8.jpg"/></Figure>IS </P><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_9.jpg"/></Figure><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_10.jpg"/></Figure>Result SV SRRR RE </P><Sect><P>Sb INEF </P></Sect><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_11.jpg"/></Figure>RE INVF INEF IS </P><Sect/><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_12.jpg"/>RM (2:0) Clk Rst En MAResul OF UF IN INV DecFMA64/128 A B Op (1:0) </Figure>Inputs A Multiplier B Multiplicand </P><Sect><P>Outputs </P><P>C Addend </P><P>Result Resultant </P></Sect><P>RM Rounding Mode </P><Sect><P>OF Overflow Flag </P></Sect><P>Op Operation </P><Sect><P>UF Underflow Flag </P></Sect><P>Clk System Clock INEF INExact Flag </P><P>Rst System Reset En Enable INVF INValid Flag </P><P>A, B Multiplicand and Multiplier C Addend SR </P><Sect><P>Op Multiply-Add Operation </P></Sect><P>RM Rounding Mode SA, SB, SC Significand A, B, and C <Figure><ImageData src="images/fpu_ip_silminds_decimal_add_multiply_only_img_13.jpg"/>Master Control Output Formulation A B RounderRR </Figure>OF EA, EB, EC Exponent A, B, and C </P></Sect><Sect><H5>Fused Multiply-Add Unit Functions </H5><Sect><H6>Formulation &amp; Detection </H6><L><LI><LI_Label>▪ </LI_Label><LI_Title>Decodes input operands (Multiplicand, Multiplier, and Addend) using IEEE 754-2008 format to produce the sign bit, significand, and exponent </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Performs special input detection </LI_Title></LI></L></Sect><Sect><H6>Decimal FMA Core </H6><L><LI><LI_Label>▪ </LI_Label><LI_Title>Performs the multiplication-addition/subtraction operation, where the addition operation is done inherently within the multiplication process, using a parallel fixed-point multiplier with fast decimal carry-propagate adder </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Performs operands alignment </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Calculates the sticky bit </LI_Title></LI></L><Sect><P>UF
OF 
</P></Sect></Sect><Sect><Sect><H6>Master Control </H6></Sect><L><LI><LI_Label>▪ </LI_Label><LI_Title>Generates the shift amount needed for operand alignment </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Generates the sticky counter value that determines how many digits to be collected in the sticky bit generator </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Generates the special values (Overflow, Underflow, and Invalid), encodes them, and passes them to output formulation </LI_Title></LI></L><Table><TR><TH>▪ Computes </TH><TH>the </TH><TH>exponent</TH><TH> as </TH></TR><TR><TH>specified </TH><TD>in</TD><TD> the</TD><TD> IEEE-754-2008 </TD></TR><TR><TH>standard </TH><TD/><TD/><TD/><TD/></TR></Table></Sect><Sect><Sect><H6>Exception Handler </H6></Sect><P>Handles the exceptions and passes the special results to the output formulation unit </P><Sect><P>Sticky bit Intermediate Sum Special Value  Special Result Rounded Result Result Exponent INValid Flag </P><P>INExact Flag  Underflow Flag Overflow Flag </P></Sect></Sect><Sect><Sect><H6>Rounder </H6><L><LI><LI_Label>▪ </LI_Label><LI_Title>Performs the result rounding operations to fit in the required precision based on the rounding mode, the result’s sign, and the shifted result (including a round digit and sticky bit) </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Generates the inexact flag </LI_Title></LI></L></Sect></Sect><Sect><Sect><H6>Output Formulation </H6><L><LI><LI_Label>▪ </LI_Label><LI_Title>Encodes the resultant significand in DPD format </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Formulates the special values (infinity or NaN) to comply with the IEEE 7542008 standard </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Sets the appropriate flags </LI_Title></LI></L></Sect><P>© Copyright 2007‐2010 SilMinds. All Rights Reserved. SilMinds reserves the right to change the specifications and www.silminds.com the content included in this data sheet at any time without prior notice. </P><Sect><P>info@silminds.com </P></Sect></Sect></Sect></Sect></Part></TaggedPDF-doc>