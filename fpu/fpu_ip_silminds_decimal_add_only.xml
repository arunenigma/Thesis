<?xml version="1.0" encoding="UTF-8" ?><!-- Created from PDF via Acrobat SaveAsXML --><!-- Mapping Table version: 28-February-2003 --><TaggedPDF-doc><?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:CreatorTool>PScript5.dll Version 5.2.2</xmp:CreatorTool>
         <xmp:ModifyDate>2010-09-07T18:50:48+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-09-07T18:50:48+02:00</xmp:CreateDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>xml</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">''DecAdd64-128 100906</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>i64</rdf:li>
            </rdf:Seq>
         </dc:creator>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Distiller 8.1.0 (Windows)</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/">
         <xmpMM:DocumentID>uuid:f02b92de-c311-46c3-ae48-3caa24c817ed</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:4f500a89-1835-4544-b0f1-85f1ae0fbf51</xmpMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?><?xpacket end='r'?><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_0.jpg"/></Figure><Part><Sect><H2>IP Core Product Data Sheet </H2></Sect><Sect><Sect><H3>DFP Adder Units DecAdd64/128 </H3></Sect><P>DecAdd64 and DecAdd128 IP core units are novel DFP Adder designs, offered in 64-bit and 128-bit versions. The Adder unit computes the Sum or the Difference of two vector Operands. Inputs are encoded in Decimal Interchange Format. The product is fully compliant with the IEEE 754-2008 Standard. </P><Sect><Sect><H5>Key Features </H5></Sect><L><LI><LI_Label>⇒ </LI_Label><LI_Title>Full IEEE 754-2008 compliance </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Decimal128 (34 decimal digits) format support </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Decimal Interchange format with Densely Packed Decimal (DPD) encoding support </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Seven rounding modes support </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Automatic pipelining selectable with arbitrary number of stages </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Result is available at every clock cycle </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Overflow, Underflow, Invalid, and Inexact operation flags </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Tested with over 500,000 test cases compliant with IEEE 754-2008 format </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Full DFP accuracy and precision support </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>Fully synthesizable with no internal tri-states </LI_Title></LI></L></Sect><Sect><H5>Performance Data </H5><P>The table below summarizes gate-level synthesized performance data in TSMC 90 nm, for sample combinational and pipelined designs. The IP core source code is provided with generic parameters to enable automatic pipelining with arbitrary number of pipeline stages. More detailed performance data can be found in the product technical documentation. </P><Table><TR><TH>Design </TH><TH>Delay </TH><TH>Area </TH></TR><TR><TD>nS </TD><TD>FO4 </TD><TD>μm2 </TD><TD>NAND2 </TD></TR><TR><TH>DecAdd64-comb </TH><TD>2.03</TD><TD> 45.1 </TD><TD>38,405.1 </TD><TD>13,608 </TD></TR><TR><TH>DecAdd64-pipe4 </TH><TD>0.74</TD><TD> 16.4 </TD><TD>72,963.3 </TD><TD>25,852 </TD></TR><TR><TH>DecAdd128-comb </TH><TD>2.55</TD><TD> 56.7 </TD><TD>71,594.4</TD><TD> 25,367 </TD></TR></Table></Sect><Sect><Sect><H5>Applications </H5><L><LI><LI_Label>⇒ </LI_Label><LI_Title>DFPA units for next generation processors </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>DFPA on-chip co-processors </LI_Title></LI><LI><LI_Label>⇒ </LI_Label><LI_Title>DFPA accelerator boards </LI_Title></LI></L></Sect><Sect><H5>IP Deliverable </H5><P>Deliverable depends on the type of licensing agreement and the negotiated business model. The following items could be included: </P><L><L><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Source code: </LI_Title></LI><L><LI><LI_Label>▪ </LI_Label><LI_Title>VHDL source code </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>VERILOG source code </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Encrypted or plain text EDIF netlist </LI_Title></LI></L></L><LI><LI_Label>⇒ 	</LI_Label><LI_Title>FPGA code versions, optimized for either speed or area </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>VHDL &amp; VERILOG test bench environments </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Full test suites compliant with IEEE 754-2008 standard. </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Technical documentation </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>HDL core specification </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>Synthesis scripts </LI_Title></LI><LI><LI_Label>⇒ 	</LI_Label><LI_Title>IP Core implementation support  </LI_Title></LI></L></Sect><Sect><H5>Configurations </H5><P>DecAdd64/128 can be  combined with other SilMinds IP core units to comprise arbitrary decimal coprocessor architectures. Deployment is made easy and reliable through a compact core size, parameterized RTL, and flexible test benches. </P></Sect></Sect><Sect><Sect><H4>Product Verification </H4><P>This product has been verified using an innovative and efficient constraint driven test vector generation tool. The test vectors cover all valid cases in conformance with the IEEE 754-2008 standard. </P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_1.jpg"/></Figure></Sect><Table><TR><TH>Symbol &amp; Block Diagram </TH></TR><TR><TH>A </TH><TD>Result </TD><TD>Inputs </TD></TR><TR><TH>B </TH><TD/><TD>A, B </TD><TD>Augend and addend </TD><TD>Outputs </TD></TR><TR><TH>RM (2:0) </TH><TD>OF </TD><TD>RM</TD><TD> Rounding Mode </TD><TD>Result</TD><TD> Resultant </TD></TR><TR><TH>Op </TH><TD>UF </TD><TD>Op </TD><TD>Operation </TD><TD>OF </TD><TD>Overflow Flag </TD></TR><TR><TH>Clk </TH><TD/><TD>Clk </TD><TD>System Clock </TD><TD>UF</TD><TD> Underflow Flag </TD></TR><TR><TH/><TD>INE </TD><TD/><TD/><TD/><TD/></TR><TR><TH>Rst </TH><TD/><TD/><TD>Rst </TD><TD>System Reset </TD><TD>INEF </TD><TD>INExact Flag </TD></TR><TR><TH>En </TH><TD>DecAdd64/128 </TD><TD>INV </TD><TD>En </TD><TD>Enable </TD><TD>INVF </TD><TD>INValid Flag </TD></TR></Table><Sect><P>A, B Augend, Addend RM Rounding Mode RM </P></Sect><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_2.jpg"/>Placer </Figure><Sect><P>A SV </P></Sect><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_3.jpg"/>Master Control </Figure>PS </P><Sect><P>SLRA </P><P>SC</P><P>EB SR </P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_4.jpg"/>InjectorShifterSticky bit Generator </Figure></Sect><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_5.jpg"/></Figure>SA, SB Significands A and B </P><P>Exception 
Handler 
</P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_6.jpg"/></Figure><P>EA, EB Exponents A and B <Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_7.jpg"/></Figure>RR SV Special Values </P><Sect><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_8.jpg"/></Figure><P>Formulation and Detection</P><P>Flags </P><P>SWA, SWB Swapped A,B </P><P>Output Formulation </P><P>SA SLRA Shift Left/Right Amount </P></Sect><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_9.jpg"/>Decimal Adder CoreSWA </Figure><Sect><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_10.jpg"/></Figure><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_11.jpg"/></Figure></Sect><P>RSSB </P><Sect><P>PS Predicted Sign </P><P>IE Intermediate Exponent Result Sb Sticky Bit </P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_12.jpg"/></Figure><P>EA </P></Sect><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_13.jpg"/></Figure>SWB </P><Sect><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_14.jpg"/></Figure><P>RR Rounded Result </P></Sect><P>Sb </P><Sect><P>B </P><P>RE Rounded Exponent </P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_15.jpg"/></Figure><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_16.jpg"/></Figure></Sect><P>RM RE RS Result Sign </P><P><Figure><ImageData src="images/fpu_ip_silminds_decimal_add_only_img_17.jpg"/></Figure>IE</P><Sect><P>Op </P></Sect><P>Adder Unit Functions </P><P>Formulation &amp; Detection </P><L><LI><LI_Label>▪ </LI_Label><LI_Title>Decodes input operands (Augend and Addend) using IEEE 754-2008 format to produce the sign bit, significand, and exponent </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Performs special input detection </LI_Title></LI></L><Sect><P>Master Control </P></Sect><L><LI><LI_Label>▪ </LI_Label><LI_Title>Determines if operand swapping is needed </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Computes shift amounts for both operands </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Computes how many sticky counter digits will be collected in the sticky bit </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Encodes special values and passes them to the output formulation </LI_Title></LI></L><P>Sticky-bit Generator </P><P>Determines the Sticky bit that results from logically ORing the bits of the digits to the right of the round digit </P><P>Shifter </P><P>Aligns the operands to reach the preferred exponent </P><P>Injector </P><P>Performs insertion of special digits into the smallest operand, before addition, to get the appropriate rounded result </P><P>Placer </P><P>Performs operands placement depending on the effective operation (subtraction or addition) </P><P>© Copyright 2007‐2010 SilMinds. All Rights Reserved. SilMinds reserves the right to change the specifications and the content included in this data sheet at any time without prior notice. </P><Sect><P>SR Special Result </P><P>Decimal Adder Core </P><P>Performs decimal fixed point addition and subtraction; addition occurs in parallel at digit level; carry signals are propagated through a flagged Kogge-Stone prefix tree) </P><P>Exception Handler </P><P>Handles the exceptions and passes the special results to the output formulation unit </P><P>Output Formulation </P><L><LI><LI_Label>▪ </LI_Label><LI_Title>Encodes the resultant significand in DPD format </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Formulates the special values (infinity or NaN) to comply with the IEEE 754-2008 standard </LI_Title></LI><LI><LI_Label>▪ </LI_Label><LI_Title>Sets the appropriate flags </LI_Title></LI></L><Sect><H5>www.silminds.com </H5><P>info@silminds.com </P></Sect></Sect></Sect></Sect></Part></TaggedPDF-doc>