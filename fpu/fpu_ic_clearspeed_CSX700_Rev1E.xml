<?xml version="1.0" encoding="UTF-8" ?><!-- Created from PDF via Acrobat SaveAsXML --><!-- Mapping Table version: 28-February-2003 --><TaggedPDF-doc><?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Elements 7.0 (Windows)</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:CreatorTool>FrameMaker 7.2</xmp:CreatorTool>
         <xmp:ModifyDate>2011-01-21T18:15:13Z</xmp:ModifyDate>
         <xmp:CreateDate>2005-10-20T10:47:30Z</xmp:CreateDate>
         <xmp:MetadataDate>2011-01-21T18:15:13Z</xmp:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>xml</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">CSX700_Datasheet_Rev1E.fm</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>chrish</rdf:li>
            </rdf:Seq>
         </dc:creator>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/">
         <xmpMM:DocumentID>uuid:c8231b7f-9339-45f4-b86d-9bb785d5fa37</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:ed41c0b3-9291-d84a-8d3f-3842c5fae1cc</xmpMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?><?xpacket end='r'?><bookmark-tree><bookmark title="Table of contents"><destination structID="None"/></bookmark><bookmark title="1 Description"><destination structID="LinkTarget_2845"/><bookmark title="1.1 Multi-threaded array processor (MTAP) core"><destination structID="LinkTarget_2802"/><bookmark title="1.1.1 MTAP overview"><destination structID="LinkTarget_2827"/></bookmark><bookmark title="1.1.2 Mono controller"><destination structID="LinkTarget_2822"/></bookmark><bookmark title="1.1.3 Mono execution unit"><destination structID="LinkTarget_2818"/></bookmark><bookmark title="1.1.4 Poly execution unit"><destination structID="LinkTarget_2815"/></bookmark><bookmark title="1.1.5 Input-output"><destination structID="LinkTarget_2812"/></bookmark></bookmark><bookmark title="1.2 PCI Express host interface (HIF)"><destination structID="LinkTarget_3289"/></bookmark><bookmark title="1.3 Host debug port (HDP)"><destination structID="LinkTarget_3284"/></bookmark><bookmark title="1.4 ClearConnect Bridge (CCBR)"><destination structID="LinkTarget_3279"/></bookmark><bookmark title="1.5 Memory unit (MU)"><destination structID="LinkTarget_3272"/></bookmark><bookmark title="1.6 Interrupt and semaphore unit (ISU)"><destination structID="LinkTarget_3268"/></bookmark><bookmark title="1.7 SRAM"><destination structID="LinkTarget_3263"/></bookmark><bookmark title="1.8 System services"><destination structID="LinkTarget_3258"/></bookmark><bookmark title="1.9 Bus monitor (BMON)"><destination structID="LinkTarget_3255"/></bookmark><bookmark title="1.10 ClearConnect Bus (CCB)"><destination structID="LinkTarget_3244"/></bookmark></bookmark><bookmark title="2 Interfaces"><destination structID="LinkTarget_3251"/><bookmark title="2.1 I/O signal types"><destination structID="LinkTarget_3213"/><bookmark title="2.1.1 3.3V LVTTL"><destination structID="LinkTarget_3236"/></bookmark><bookmark title="2.1.2 1.8V CMOS"><destination structID="LinkTarget_3233"/></bookmark><bookmark title="2.1.3 1.8V SSTL"><destination structID="LinkTarget_3226"/></bookmark><bookmark title="2.1.4 1.8V differential SSTL clock inputs"><destination structID="LinkTarget_3223"/></bookmark><bookmark title="2.1.5 PCI Express"><destination structID="LinkTarget_3220"/></bookmark></bookmark><bookmark title="2.2 Pin lists"><destination structID="LinkTarget_3201"/></bookmark><bookmark title="2.3 PCI Express"><destination structID="LinkTarget_3199"/></bookmark><bookmark title="2.4 Host/debug port (HDP)"><destination structID="LinkTarget_3141"/></bookmark><bookmark title="2.5 ClearConnect Bridge port"><destination structID="LinkTarget_3107"/></bookmark><bookmark title="2.6 Memory unit"><destination structID="LinkTarget_3088"/></bookmark><bookmark title="2.7 System services"><destination structID="LinkTarget_3014"/><bookmark title="2.7.1 Reset"><destination structID="LinkTarget_3072"/></bookmark><bookmark title="2.7.2 Clocking"><destination structID="LinkTarget_3059"/></bookmark><bookmark title="2.7.3 GPIO"><destination structID="LinkTarget_3052"/></bookmark><bookmark title="2.7.4 Configuration TAP controller"><destination structID="LinkTarget_3047"/></bookmark><bookmark title="2.7.5 Thermal monitor"><destination structID="LinkTarget_2985"/></bookmark></bookmark><bookmark title="2.8 JTAG boundary scan test access port (TAP)"><destination structID="LinkTarget_2970"/><bookmark title="2.8.1 TAP instructions"><destination structID="LinkTarget_2974"/></bookmark></bookmark></bookmark><bookmark title="3 DC and thermal characteristics"><destination structID="LinkTarget_2953"/><bookmark title="3.1 Recommended operating conditions"><destination structID="LinkTarget_2953"/><bookmark title="3.1.1 Supply sequencing"><destination structID="LinkTarget_2956"/></bookmark></bookmark><bookmark title="3.2 Handling and assembly"><destination structID="LinkTarget_2944"/></bookmark><bookmark title="3.3 Absolute maximum and minimum ratings"><destination structID="LinkTarget_2943"/></bookmark><bookmark title="3.4 Termination and reference voltages"><destination structID="LinkTarget_2909"/><bookmark title="3.4.1 CCBR"><destination structID="LinkTarget_2938"/></bookmark><bookmark title="3.4.2 PCI Express"><destination structID="LinkTarget_2920"/></bookmark><bookmark title="3.4.3 MU"><destination structID="LinkTarget_2915"/></bookmark><bookmark title="3.4.4 Analog supplies"><destination structID="LinkTarget_2914"/></bookmark></bookmark><bookmark title="3.5 1.8V CMOS DC characteristics"><destination structID="LinkTarget_2873"/></bookmark><bookmark title="3.6 3.3V LVTTL characteristics"><destination structID="LinkTarget_2872"/></bookmark><bookmark title="3.7 SSTL DC characteristics"><destination structID="LinkTarget_2871"/></bookmark></bookmark><bookmark title="4 AC characteristics"><destination structID="LinkTarget_2866"/><bookmark title="4.1 Test conditions"><destination structID="LinkTarget_2866"/></bookmark><bookmark title="4.2 PCI Express interface"><destination structID="LinkTarget_2863"/></bookmark><bookmark title="4.3 HDP"><destination structID="LinkTarget_3333"/></bookmark><bookmark title="4.4 CCBR"><destination structID="LinkTarget_3332"/></bookmark><bookmark title="4.5 Memory unit"><destination structID="LinkTarget_3327"/></bookmark><bookmark title="4.6 System service"><destination structID="LinkTarget_3297"/><bookmark title="4.6.1 JTAG and CTAP"><destination structID="LinkTarget_3300"/></bookmark></bookmark></bookmark><bookmark title="5 Bootstrap sequence"><destination structID="LinkTarget_3324"/></bookmark><bookmark title="6 Mechanical data"><destination structID="LinkTarget_3313"/></bookmark><bookmark title="7 Ordering information"><destination structID="LinkTarget_3312"/></bookmark><bookmark title="Revision history"><destination structID="LinkTarget_3309"/></bookmark></bookmark-tree><Document xml:lang="en-US"><Article_A><TextSection><_-Title>CSX700 Floating Point Processor</_-Title><_-Title>Datasheet<_Body>Designed for data-intensive and high-compute applications</_Body><_Body>The CSX700 is a high performance, low power floating point coprocessor. It is designed for use in a variety of applications in high performance computing and embedded systems.</_Body><_Body>The CSX700 is the second product in ClearSpeed’s family of floating point application accelerators. The CSX processors are based around ClearSpeed’s multi-threaded array processor (MTAP) architecture. This architecture has been developed to address the implementation issues of high-performance systems by providing unparalleled performance-per-watt.</_Body><_Body><Figure><ImageData src="images/fpu_ic_clearspeed_CSX700_Rev1E_img_0.jpg"/>CSX700On Chip Network (ClearConnectBus)128KSRAMHost InterfacePCIex16System ServicesCCBRHDPDMADMAMUDDR2-533MTAP128KSRAMMTAPDMAMUDDR2-533BusMonitorBusMonitorCSX700On Chip Network (ClearConnectBus)128KSRAMHost InterfacePCIex16System ServicesCCBRHDPDMADMAMUDDR2-533MTAP128KSRAMMTAPDMAMUDDR2-533DMAMUDDR2-533BusMonitorBusMonitor</Figure></_Body><_Body>The CSX700 comprises two multi-threaded array processor (MTAP) cores, two external DDR2 DRAM interfaces, a 16-lane PCI Express host interface, a high-speed chip-to-chip interface and embedded SRAM integrated onto a single chip. All subsystems on the chip are interconnected by a ClearConnect on-chip network (the ClearConnect bus).</_Body><_Body><Figure><ImageData src="images/fpu_ic_clearspeed_CSX700_Rev1E_img_1.jpg"/>CSX700MTAPProgrammable I/OPE 0PE 1PE n–1…Data CacheMono ControllerInstructionCacheControl and DebugPoly ControllerMTAPProgrammable I/OData CacheMono ControllerInstructionCacheControl and DebugPoly ControllerPE 0PE 1PE n–1…128KSRAMOn Chip Network (ClearConnectBus)128KSRAMBusMonitorBusMonitorHost InterfacePCIex16System ServicesGPIOJTAGReset &amp; ClockingCCBRHDPDMADMAMUDDR2-533DMAMUDDR2-533CSX700MTAPProgrammable I/OPE 0PE 1PE n–1…Data CacheMono ControllerInstructionCacheControl and DebugPoly ControllerMTAPProgrammable I/OData CacheMono ControllerInstructionCacheControl and DebugPoly ControllerPE 0PE 1PE n–1…128KSRAMOn Chip Network (ClearConnectBus)128KSRAMBusMonitorBusMonitorHost InterfacePCIex16System ServicesGPIOJTAGReset &amp; ClockingSystem ServicesGPIOJTAGReset &amp; ClockingCCBRHDPDMADMAMUDDR2-533DMAMUDDR2-533</Figure></_Body><_HeadingL2>1.1 Multi-threaded array processor (MTAP) core<_Body>The MTAP architecture provides an exceptionally powerful and scalable processing solution, based on a SIMD array of processing elements (PEs). Each PE has its own local memory and I/O capability, making the architecture ideally suited for applications which have high processing and/or bandwidth requirements.</_Body><_Body>Each MTAP core contains an array of 96 PEs. The PEs include multiple processing units and have high level of internal instruction-level and data parallelism. Each PE also has its own local memory providing a high bandwidth access to frequently used data.</_Body><_Body><Figure><ImageData src="images/fpu_ic_clearspeed_CSX700_Rev1E_img_2.jpg"/>PEi+1PEn-1 PE0Load/StoreControllerDataCache(4 Kbytes)Poly Execution UnitRegisterRead/WriteSemaphoresControlPIOEnginePIOControllerPIOInterruptGenerationIRQ6432321283232646464Register File(128 bytes)SRAM(6 Kbytes)I/OBuffer32128(64 bytes)PEi-16464InstructionFetchInstructionCache(8 Kbytes)12832Instruction FetchLoad/Store128Load/StoreMono Execution UnitPer ThreadRegisters(8 threads)128128163216ReturnResultRegister File(64 bytes)PCInstructionDecodeALU32Control UnitArrayControllerMACFP MulFP Add FP ÷  √ ALU</Figure></_Body><_HeadingL3>1.1.1 MTAP overview<_Body>The two MTAP cores are identical; a single MTAP core is shown in the block diagram (<Link>Figure 2</Link>).</_Body><_Body>The main components of the processor are:</_Body><_Body>It is the poly execution unit and its array of PEs that provide the processor’s massive processing power and memory bandwidth. The mono and poly execution units have basically the same architecture and instruction set. The tightly integrated mono and poly execution units mean that the processor as a whole is efficient for simple sequential code, as well as when processing large amounts of data in parallel. </_Body><_Body>The various functional units within the execution units (for example, ALU, FPU, I/O) can operate concurrently.</_Body><_Body>The processor supports 64-bit addressing so that large data sets can be processed. The 64-bit address space is flexibly mapped into a 48-bit physical address space. For embedded systems and backward compatibility a simple 32-bit addressing mode is provided.</_Body></_HeadingL3><_HeadingL3>1.1.2 Mono controller<_Body>The instruction fetch and issue hardware supports multi-threaded execution. Thread switching is under software control and may be triggered in response to events such as the completion of an operation by one of the I/O engines. By providing support in hardware, the need for a real-time kernel for the MTAP processor is removed. The hardware supports 8 threads. Hardware semaphores are used to synchronize threads with other threads and with hardware units.</_Body><_Body>To optimize performance, the processor includes instruction and data caches.</_Body></_HeadingL3><_HeadUn-4>Features</_HeadUn-4><_HeadingL3>1.1.3 Mono execution unit<_Body>As well as handling mono data, the mono unit is responsible for program flow control (branching), thread switching and other control functions. The mono execution unit also has overall control of I/O operations. Results from these operations are returned to a register in the mono unit. The mono execution unit contains:</_Body></_HeadingL3><_HeadingL3>1.1.4 Poly execution unit<_Body>The MTAP core contains an array of 96 PEs. The array provides both compute power and high bandwidth storage. The PE array operates on a single-instruction multiple-data (SIMD) model, processing multiple data items in parallel. Each PE contains:</_Body></_HeadingL3><_HeadingL3>1.1.5 Input-output<_Body>The MTAP processor supports a programmed I/O (PIO) channel designed for transferring variable amounts and types of data under software control. This is typically used to access external memory or peripherals. Key features are:</_Body></_HeadingL3></_HeadingL2></_-Title><_ListBullet1><_z-Top-of-Form><_HeadingL2>1.2 PCI Express host interface (HIF)<_Body>The host interface contains a x16 2.5Gb/s rev 1.1 PCIe interface. This is capable of negotiating links of x16, x8, x4, x2 and x1 according to v1.1 of the PCIe Specification. It presents two PCIe BAR apertures, one for register control and the other for small data transfer. In addition, a dual-channel DMA unit allows high speed bi-directional data transfer at 3GB/s. It is possible to modify certain PCIe config space and PHY parameters prior to link negotiation using an external device connected to the HDP. The HIF also contains some host related system services (HRSS). These are functions, such as software reset and stopclock registers which must be accessible when the main part of the chip is in reset and/or not clocked.</_Body></_HeadingL2><_HeadingL2>1.3 Host debug port (HDP)<_Body>The HDP is the means by which the CSX700 is configured. It has full access to the register and memory space of the device.</_Body><_Body>The external interface is a low pin-count shared-bus interface that provides a low-cost access to a number of CSX700 devices on a board.</_Body></_HeadingL2><_HeadingL2>1.4 ClearConnect Bridge (CCBR)<_Body>The internal bus is made available at a port that can be interconnected with no glue logic to construct dual-chip systems. This enables system performance to be scaled to meet the requirements of the application. In addition, the CCBR allows the CSX700 to be used with an FPGA in embedded systems.</_Body><_Body>This full duplex port uses a double data rate interface to minimize the pin count. </_Body></_HeadingL2><_HeadingL2>1.5 Memory unit (MU)<_Body>External memory is connected through two 64-bit DDR2 DRAM interfaces. When used with a 72-bit wide DRAM array this provides error checking and correction (ECC). Each interface supports up to 8 Gbytes of local DRAM and can be accessed by both MTAP cores. The DRAM is accessible from any bus master in the system, including the host processor.</_Body><_Body>The DRAM controller runs asynchronously to the device core, from a clock generated by a dedicated internal PLL. The multiplication ratio from the reference clock input is programmed by control registers.</_Body><_Body>An attached programmable DMA engine permits data transfer to or from the external DRAM to occur in the background in parallel with the processor core executing other operations. The DMA unit may be programmed by either the host processor or the device processor core. DMA transfers can be chained together using transfer description records stored anywhere in system memory. DMA operation is integrated into the hardware semaphore mechanisms for inter-processor synchronization.</_Body></_HeadingL2><_HeadingL2>1.6 Interrupt and semaphore unit (ISU)<_Body>The ISU supports the synchronization between threads and with external events. Each MTAP has its own ISU, but can access both. Multiple processors may perform synchronization events, for example to assist in communication via shared memory, through operations on the set of hardware semaphore elements contained in this block. Similarly, synchronization with a host processor may be performed via conversion of semaphore events to interrupt events. Both pin and message-signalled interrupts are supported for flexible support of multiple devices in various host environments.</_Body></_HeadingL2><_HeadingL2>1.7 SRAM<_Body>The CSX700 includes two 128 Kbyte blocks of on-chip SRAM which provide the processors with low latency access to code and data. Each memory is organized as 8K words of 16 bytes and can be ECC protected. Both blocks of SRAM can be accessed by both MTAP cores.</_Body><_Body>Typically, the SRAM is used to store items for which low-latency access from the processor core is important, such as instruction code and frequently used data. The SRAM is accessible from any bus master in the system, including the host processor.</_Body></_HeadingL2><_HeadingL2>1.8 System services<_Body>The system services blocks contains other control and utility signals such as reset controls and general purpose I/O (GPIO) signals.</_Body><_Body>The GPIO signals can be configured to be interrupt sources for systems integration use.</_Body></_HeadingL2><_HeadingL2>1.9 Bus monitor (BMON)<_Body>The bus monitors trap mis-addressed transactions. The details of these transactions can be extracted from the bus monitors to assist systems integration and software debug.</_Body></_HeadingL2><_HeadingL2>1.10 ClearConnect Bus (CCB)<_Body>The ClearConnect bus is a packet switched on-chip network; on the CSX700 it is configured as two independent channels. One of these is the main system bus, designed for high bandwidth data movements, the other is a peripheral bus, designed for read/write access to control registers and interrupt messages. Both system bus and peripheral bus are pipelined. The system bus is split transaction for maximum performance. Both busses support multiple concurrent transfers, thus providing extremely high aggregate bandwidth.</_Body><_Body>The system bus runs at core clock speed and can transfer up to 128 bytes in a single transaction. The peripheral bus can transfer 4 bytes in each transaction.</_Body><_Body>By means of the CCBR, the ClearConnect bus can be extended to a second CSX700 device and to system logic implemented in other devices such as FPGAs. All memory targets are then accessible by all masters on the global bus, using a 48-bit physical address. Master and target units are uniquely identified by means of device IDs that are assigned to individual devices at boot time, and internal node IDs that are fixed. The combination of device and node ID forms a geographic bus address that is unique to each unit. Part of the master’s logical address is used, by means of a programmable address aperture unit, to map logical addresses to physical addresses that reside on particular bus targets.</_Body><_Body>A set of interfaces allow the CSX700 to be used in different types of systems. All interfaces that carry data operate asynchronously to each other and to the processor core. This allows the clock frequency of the core and all interfaces to be optimized for the application.</_Body><_Body>The pin counts in the headings below include analog supplies and references but not core or I/O power and ground.</_Body></_HeadingL2><_HeadingL2>2.1 I/O signal types<_Body>The I/O pins of the CSX700 have different signalling standards according to their function. The I/O pins all have high-side and low-side clamping diodes, and so cannot tolerate applied voltages outside of their VDDIO to VSS range. In particular, this means that the SSTL pins are not 3.3V tolerant.</_Body><_HeadingL3>2.1.1 3.3V LVTTL<_Body>All configuration and control pins use 3.3V LVTTL I/Os. Some inputs include weak pull-up resistors; those that do not must not be left floating. The LVTTL outputs have a drive strength that self-series terminates into a 50Ω line, and do not require parallel termination. The GPIO pins are 20Ω terminated.</_Body></_HeadingL3><_HeadingL3>2.1.2 1.8V CMOS<_Body>A single pin, BIRQ_N pin in the CCBR, uses 1.8V CMOS. Usually BIRQ_N will be connected to the BIRQ_N pin on the CCBR interface of the connected device.&quot;</_Body></_HeadingL3><_HeadingL3>2.1.3 1.8V SSTL<_Body>The high bandwidth ports (CCBR, MU) of the device use SSTL I/O pins. The device contains programming registers that control whether the pin groups operate as SSTL class I or class II outputs. In point-to-point applications, class I is typically used. Some external termination is required on address and control lines for the memory unit.</_Body><_Body>The SSTL pads employ on-die termination (ODT) which is controlled either by register or dynamically by the device logic. This is in order to eliminate the need for external termination resistors.</_Body><_Body>A reference voltage is required for all SSTL input pins. There is approximately one VREF input for every nine inputs.</_Body></_HeadingL3><_HeadingL3>2.1.4 1.8V differential SSTL clock inputs<_Body>Many clock inputs on the CSX700 are differential SSTL inputs. These should be used with differential clock sources for lowest jitter and radiated emissions. They may also be used as single ended inputs by feeding a clock input to the CLK_P input and tying the CLK_N input to a reference voltage in the centre of the clock signal swing (typically VDDIO/2).</_Body></_HeadingL3><_HeadingL3>2.1.5 PCI Express<_Body>The PCI Express pins conform to PCI Express base Specification 1.1 standard.</_Body></_HeadingL3></_HeadingL2><_HeadingL2>2.2 Pin lists<_Body>The following tables give the pin descriptions and BGA locations. To assist with planning board layout, a spreadsheet detailing the specific pin locations and BGA trace lengths can be requested from ClearSpeed. The Type column has the following nomenclature:</_Body><_Body><Span/></_Body><_Body><Span/></_Body><_Body>Note: Pins M0_DSQ0 ... M0_DSQ8 should be implemented as NC (no connect). Connecting a load to these pins will affect the DDR interface timing.<Span/></_Body><_Body>Note: Pins M1_DSQ0 ... M1_DSQ8 should be implemented as NC (no connect). Connecting a load to these pins will affect the DDR interface timing. </_Body></_HeadingL2><_HeadingL2>2.3 PCI Express</_HeadingL2></_z-Top-of-Form><_z-Top-of-Form><_Body>The PCI Express Interface is a 16 lane 2.5Gb/s serial standard used to connect to host motherboards and a variety of other systems. </_Body><_Body><Link></Link>The pins associated with PCI Express can be found in Table 2.</_Body><_Body>CSX700 can connect to a variety of host lane widths up to x16. It supports polarity reversal and limited lane reversal. The condition being that physical lane 0 must always be present in the final link configuration. The diagram below shows the supported and unsupported card and host slot configurations with respect to widths and lane reversal.</_Body><_HeadingL2>2.4 Host/debug port (HDP)<_Body>The HDP is used for booting the device. It also provides access to the processor debug features. It has byte-wide data ports, one each for input and output and uses a proprietary protocol. The ports are designed for multi-drop bus connections when more than one CSX700 device is used. The HDP is both a slave interface, for a host system to control the device, and a master interface, by which the device can access memory or other hardware functions that are part of host logic or associated with in-circuit debug hardware.</_Body><_Body><Link></Link>The pins associated with the HDP can be found in Table 3. The timing diagrams showing the protocol can be found in <Link>Section 4.3</Link>.</_Body><_Body>The HDP has its own clock input, which is typically run at a lower clock frequency than the device core. The HDP I/O pins are 3.3V LVTTL.</_Body><_Body>The HDP uses two byte-wide interfaces for input (the downstream interface) and output (the upstream interface), and both interfaces may operate simultaneously since they share no pins, other than the clock input HCLK. A media access control (MAC) layer allows provision for external multidrop connection so that connecting a host or debug adaptor to multiple CSX700 chips is straightforward. The only signals wired to individual devices of a multiple processor system are pins HREQ and HGNT, all others may be connected to a common bus.</_Body><_Body>Following reset, multiple interconnected CSX700 devices are enumerated by the boot system through their HDP interfaces. The boot system performs a special enumeration cycle to each device present by asserting HGNT while applying a device number to pins HRX[7:0], which identifies its unique position on the multi-device network.</_Body><_Body>The HDP handles bus transactions transparently, one at a time. Each is treated as a stream of bytes, with header and data payload encoded according to the transaction type. The minimum length transaction encoding is 6 bytes. The data is transferred on HTXDn or HRXDn when the corresponding HTXVAL or HRXVAL is asserted The final byte in a transaction is marked with the assertion of the corresponding HTX_EOP or HRXEOP signal. Flow control is handled by HTXSTP and HRXSTP. The HRXSTP outputs are wired-OR from all the devices on the bus.</_Body><_Body>The HDP operates asynchronously to the device core from a dedicated clock input HCLK. All signals are synchronous to the rising edge of HCLK. The HDP contains buffering to match the slow byte-wide operation of its interfaces to the faster and wider internal bus. </_Body><_Body>HDP protocol errors are detected and indicated on the HIRQ_N output. This is a wired-NOR signal that can be connected to multiple devices on the HDP bus. One chip in a system, typically chip 0, has HIRQ_N configured as an input. It ORs its internal IRQ with the incoming IRQ and passes it on to the interrupt units. Further HDP and bus accesses may or may not be possible, depending on the nature of the error. </_Body></_HeadingL2><_HeadingL2>2.5 ClearConnect Bridge port<_Body>The ClearConnect Bridge port is a high speed port which enables data to be transferred to and from the device. The port is a full duplex 176-bit wide interface that uses DDR and clock forwarding to achieve high bandwidth. The port is a continuation of the internal ClearConnect bus, which can be bridged from one device to another to form a continuous packet switching network. </_Body><_Body><Link></Link>The pins associated with the CCBR can be found in Table 4.</_Body><_Body>Use of the bridge port is optional. If the bridge port is not used it can be disabled to reduce power consumption. Note that in this case the IO power supplies must still be connected.</_Body><_Body>The CCBR is software configurable for a variety of data rates. Once configured, it can be used for both AVCI (advanced virtual component interface) and PVCI (peripheral virtual component interface) traffic. Set up of the remote CCBR requires the use of the HDP.</_Body><_Body>The interface consists of 9 lanes of 9 signals; each lane being 8 data + 1 strobe. Data is transferred on both edges of the strobe. Signals within a lane must have their board traces closely skew matched at the higher operating speeds. </_Body><_Body>Pins in lanes 1 to 9 form a 72-bit bus which carries bus transactions in the form of header plus data payload with optional byte enables. The encoding of the header fields on to the device pins varies with transaction type.    </_Body><_Body>The bridge ports transmit datapaths operate asynchronously from the device core, on clocks generated by a PLL whose reference is the differential input pin pair BREFCLK_P and BREFCLK_N. The input clock may be applied in single-ended mode by appropriate biasing of BREFCLK_N. Clock speeds are programmed through device registers. The receive data paths run at whatever frequency is applied as the forwarded clock from the transmit port of the device to which it is connected. </_Body><_Body>The PLLs can be bypassed by disconnecting the corresponding AVDDn supply.</_Body><_HeadUn-4>Bridge port I/O pins<_Body>All pins, except BIRQ_ N, are bidirectional 1.8V SSTL (JEDEC standard JESD8-15a). Typically the pins are used in Class I mode although under register control they can be operated in Class II mode. When acting as receivers the pins have on-die termination and so external termination is not required. The on-die termination is either 75 Ω or 150 Ω and can be removed altogether under register control. All pads require a voltage reference input; there is one VREF pin (BUREF0..9) for each of the 10 groups of signal pins.</_Body><_Body>BIRQ_N is a bidirectional 1.8V LVCMOS pin which should have a pull-up resistor on the board.</_Body></_HeadUn-4></_HeadingL2><_HeadingL2>2.6 Memory unit<_Body>The CSX700 uses DDR2-533 DRAM for its local memory. The data interface is 64 bits wide, with an additional 8 data bits for optional error correcting code (ECC). The CSX700 DRAM controller is software configurable for a variety of DDR2 DRAM types. The clock frequency is programmable through a PLL. The device supplies the clocks and all other signals required by the DRAMs.</_Body><_Body>Up to two ranks of devices are supported, with up to eight internal banks each, and an address width of up to sixteen bits. The interface may be operated with or without error correction, with memory width of 64 bits or 72 bits respectively. The DRAM array is operated with a DQ to DQS ratio of eight. Devices with a CAS latency of between 2 and 5 may be used.</_Body><_Body>The MU I/O pins are 1.8V SSTL operating in class I or class II, programmable using register bits for the different signal types. On-die termination is provided for all bidirectional signals; the termination is either 75 Ω or 150 Ω and can be removed altogether under register control.</_Body><_Body><Link></Link><Link></Link>The pins associated with the Memory Units can be found in Table 5 and Table 6.</_Body></_HeadingL2><_HeadingL2>2.7 System services<_Body>A collection of device resources such as clocking and reset are collectively termed System Services. All signals are asynchronous. External pins are 3.3V CMOS except for CLKIN_P and CLKIN_N which are differential 1.8V SSTL. In addition, host related system service (HRSS) relates to those items that are controlled by the PCIe host but need to be accessible without traversing the CCB.</_Body><_HeadingL3>2.7.1 Reset<_Body>There are two separate reset sequences: system and PCIe. It is important that the system wide reset is removed before the final part of the PCIe reset. This is because the system bus may be required to alter configuration within the PCIe core. This is further complicated because it is possible to reset the system without resetting the PCIe subsystem. In addition it must be possible to run the device without having a PCIe host attached at all or with the host held in reset.</_Body><_Body>There is an asynchronous active low reset input pin. The entire device is held in reset whenever PERST_N is asserted (connected to PERST_N in a PCI Express system). During this reset, the PLL config for SYSPLL may be streamed in using CTAP). Once SREFCLK_P / _N are stable, PERST_N may be de-asserted. This starts two state machines which bring the system and PCIe PLLs out of reset, wait for them to lock and then removes reset from the logic.</_Body><_Body>The pin HIF_EN_N is used to control the configuration of the PICe. If PCIe is not used, HIF_EN_N should be held high. For system where PCIe is used, it should initially be held low. Once the main system reset has been removed internally, the HDP may be used to alter any PCIe configuration. The completion of this is signalled by putting HIF_EN_N high again. This allows the PCIe system to start link training.</_Body><_Body>A variety of software initiated resets are available. These are present on pins so they can be connected to another CSX700 and FPGA. The connectivity of these signals is shown in <Link>Figure 4:</Link></_Body></_HeadingL3><_HeadingL3>2.7.2 Clocking<_Body>The main core clock, is generated by a PLL from an input reference of 33.33MHz to 100MHz (50MHz nominal). The PLL can be bypassed for test and debug purposes. The core clock is multiplied by a ratio that is programmed through the CTAP configuration interface.</_Body><_Body>The SYSPLL has a bypass input that can put the PLL into bypass and out again without causing any runt pulses on its output. This signal is available as a device pin BYPASS. This may be used to put the chip into a lower power mode. It can also be used to limit the overall power used by the board by providing a toggling signal. By varying the mark to space ratio, the amount of time the chip operates at full speed, and hence the power, can be controlled.</_Body><_Body>The SYSPLL also has the ability to glitchlessly stop the output clock. The clock can then be restarted glitch free. This is controlled by a pin STOPCLOCK_IN. Normally this is connected to STOPCLOCK_OUT of the chip with a working HIF, which is in turn under register control.</_Body><_Body>Differential inputs are provided for the PLL reference clocks to minimize jitter. </_Body><_Body>The HDP clock is input directly on the HCLK pin.</_Body><_Body>The CCBR, MU and PCIe clocks are generated within their blocks using PLLs from reference clock inputs.</_Body></_HeadingL3><_HeadingL3>2.7.3 GPIO <_Body>The general purpose I/O (GPIO) pins are 7 bidirectional I/Os that are controllable through PVCI registers. In addition there is a GPIO pin in the HRSS part of the HIF which is accessible from the host when the rest of the chip is not functioning due to CCB blocking, reset, clock or other hardware problems.</_Body><_Body>Each pin can be individually controlled and used as:</_Body><_Body>The input is resynchronized to the core clock before being applied to the input register or interrupts.</_Body></_HeadingL3><_HeadingL3>2.7.4 Configuration TAP controller <_Body>There are a number areas where configuration or control is required prior to taking the device out of reset. To achieve this, a serial interface is provided. This interface, the Configuration TAP controller (CTAP), conforms to the JTAG test specification. </_Body><_Body>This five-pin interface uses the same signalling protocol as an IEEE 1149.1 compliant JTAG port, and drives an IEEE 1149.1 compliant state machine. It is, however, important to note that the CTAP system as a whole is not IEEE 1149.1 compliant.</_Body></_HeadingL3><_HeadingL4>2.7.4.1 Supported instructions<_Body>The CTAP interface contains a JTAG-like instruction register that is 4 bits long and supports the four instructions listed in <Link>Table 10</Link>. </_Body><_Body>Whenever the CTAP is reset using the CRST_N input pin, or by placing the CTAP state machine into Test-Logic-Reset, the BYPASS instruction is automatically loaded and the PLLCTRL, RESETCTRL, and CLKCTRL registers are reset to the all-zeros state. <Link>Figure 5</Link> shows the register structure. </_Body></_HeadingL4><_HeadingL4>2.7.4.2 PLL control register<_Body>The PLL control register is used to configure the SYSPLL.</_Body><_Body>Note that bit 0 is nearest CDO and is shifted into CDI first.   </_Body></_HeadingL4></_HeadingL2></_z-Top-of-Form><_z-Top-of-Form><_Body>The SYSPLL settings set during CTAP config depend on the required core clock frequency and reference clock frequency. Other output and reference clock frequencies are possible. Consult ClearSpeed for details. </_Body><_HeadingL4>2.7.4.3 Reset control register<_Body>The reset control register allows control of the SYS PLL reset. </_Body></_HeadingL4><_HeadingL4>2.7.4.4 Clock control register<_Body>The clock control register is used for controlling the termination on the reference clock inputs. There are five reference clock inputs on the device (SYS, HIF, MU0, MU1 and CCBR), so the CLKCTRL register is split into five sections with spaces in between as shown in <Link>Table 14</Link>.</_Body><_Body>Note that bit 0 is nearest CDO and is shifted into CDI first. </_Body></_HeadingL4><_HeadingL3>2.7.5 Thermal monitor<_Body>The CSX700 die incorporates two thermal diodes. Access to the thermal monitor diodes is provided by two pairs of dedicated pins, THDN1/THDP1 and THDN2/THDP2. By connecting an appropriate device, such as the National Instruments LM86, they enable measurement of die temperature during operation.</_Body></_HeadingL3><_HeadingL2>2.8 JTAG boundary scan test access port (TAP)<_Body>The TAP conforms to IEEE 1149.1 and supports full EXTEST on all pins (except analog functions). </_Body><_Body>All TAP input pins are 3.3V LVTTL with weak pull-ups.</_Body><_HeadingL3>2.8.1 TAP instructions <_Body>There are two registers which are accessed through the TAP controller:</_Body><_Body><Link></Link>The available TAP instructions are shown in Table 15. <Span/>   </_Body></_HeadingL3></_HeadingL2><_HeadingL2>3.1 Recommended operating conditions <_Body>All thermal parameters are based on thermal simulation. A Flomerics Flotherm package model is available on request.</_Body><_HeadingL3>3.1.1 Supply sequencing<_Body>The voltage applied to VDD must never exceed the voltage applied to any of the VDDIO supplies. Particular care should be taken to ensure that VDD is never driven higher than VDDIO during power-up and power-down.</_Body><_Body>To avoid the possibility of damage to I/O pads, no I/O signal should have voltages applied outside of their corresponding VDDIO supply. Particular care should be taken at power-up not to apply signals to I/O pins before VDDIO is applied. The applied I/O voltage may track the rise of VDDIO, as long as the Absolute Maximum ratings are observed. AVTT and AVTR must never be lower than VDD. </_Body><_Body>PERST_N must be active (low) during power up.</_Body></_HeadingL3></_HeadingL2><_HeadingL2>3.2 Handling and assembly<_Body>The CSX700 meets JEDEC MSL (Moisture Sensitivity Level) 4. Once removed from the moisture-proof packaging, the components have a floor life of 72 hours (at or below 
30°C / 60% relative humidity). After this they will require re-baking at 125°C for 24 hours.</_Body></_HeadingL2><_HeadingL2>3.3 Absolute maximum and minimum ratings </_HeadingL2><_HeadingL2>3.4 Termination and reference voltages<_HeadingL3>3.4.1 CCBR<_Body>CCBR pins are 1.8V SSTL signals. The receivers have on-die termination and so in most applications external termination is not required. Because of this all pads require a voltage reference input of 1/2 VDDIOC; there is one BVREF pin for each of the 10 groups of signal pins. BVREF signals must be decoupled at the pin, and the signal kept away from sources of interference.</_Body><_Body>In applications where the CCBR is unused, the reference clock and BIRQ_N should be pulled inactive, data and control pins left unconnected and BVREF pins tied to ground. VDDIOC must still be applied, but BAVDD must be tied to ground.</_Body></_HeadingL3><_HeadingL3>3.4.2 PCI Express<_Body>The PREFCLK_P and PREFCLK_N pins must be externally terminated as shown in <Link>Figure 7</Link>. The internal termination mode must be set to LVDS using CTAP (see <Link>Section 2.7.4.4</Link>)</_Body><_Body><Figure><ImageData src="images/fpu_ic_clearspeed_CSX700_Rev1E_img_3.jpg"/>PREFCLK_PPREFCLK_Nfrom oscillatorC 100nFC 100nFR 100Ω</Figure></_Body><_Body>When unused, PREFCLK_P/N should be left in the default PECL mode and left unconnected.</_Body><_Body>Unused PCIe lanes should be left unconnected.</_Body></_HeadingL3><_HeadingL3>3.4.3 MU<_Body>MU pins are 1.8V bidirectional SSTL signals. When acting as receivers the pins have on-die termination and so in most applications external termination is not required. The memory reference voltage, Mn_VREF, requires a voltage level of 1/2 VDDIO. Mn_VREF signals must be decoupled at the pin, and the signal kept away from sources of interference.</_Body><_Body>In applications where the MU is unused, the reference clock should be held inactive, data and control pins left unconnected and Mn_VREF pins tied to ground. VDDIOMn must still be applied, but BAVDD must be tied to ground.</_Body></_HeadingL3><_HeadingL3>3.4.4 Analog supplies</_HeadingL3></_HeadingL2></_z-Top-of-Form><_z-Top-of-Form><_Body>The analog supplies on the chip require low noise supplies to avoid clock jitter. This is achieved by a combination of supply filters and decoupling. <Link>Table 18</Link> below shows what is required on each pin whether it is used or unused. Type A and B filters refer to the component values. The circuit is as shown in <Link>Figure 8</Link>. Type A filters are required per power pin, whereas only one type B filters is required. Decoupling is per pin. When PCI Express is used with less than all 16 lanes available, only a subset of the power supplies need filtering. The mapping between lane width and usage is shown in <Link>Table 19</Link>.</_Body></_z-Top-of-Form><_z-Top-of-Form><_Normal>Example type A filter is:</_Normal><_Normal>Example type B filter is:</_Normal><_Body>Used PCIe lanes should have a 100nF capacitor in series with each PCB trace placed close to the connector.</_Body><_HeadingL2>3.5 1.8V CMOS DC characteristics </_HeadingL2><_HeadingL2>3.6 3.3V LVTTL characteristics </_HeadingL2><_HeadingL2>3.7 SSTL DC characteristics </_HeadingL2><_HeadingL2>4.1 Test conditions<_Body>Output timings are measured with the following loads:</_Body><_Body>All designs should be simulated using IBIS models and meet all other HDK requirements.</_Body></_HeadingL2><_HeadingL2>4.2 PCI Express interface<_Body>Transmit slew, amplitude and de-emphasis, and receiver equalization can be configured prior to link bringup.</_Body></_HeadingL2></_z-Top-of-Form><_z-Top-of-Form><_Body><Span/></_Body><_Body><Span/></_Body><_HeadingL2>4.3 HDP<_Body>All HDP timings are relative to the rising edge of input clock HCLK. <Span/> </_Body></_HeadingL2><_HeadingL2>4.4 CCBR</_HeadingL2><_HeadingL2>4.5 Memory unit<_Body>Both memory units have the same timing parameters. The diagrams below refer to M0, but apply to M1 as well.</_Body><_Body>Correct DDR2 design requires careful PCB layout to match skew between clocks, strobes and their respective data groups. Timing between clocks, strobes and data are controllable using internal registers. For the correct settings and further board layout details, see the Hardware Development Kit.</_Body></_HeadingL2><_HeadingL2>4.6 System service<_Body>The signals RST_OUT_N, BYPASS, HIF_EN_N, IRQ_N, SW_RST_IN_N, GPIOn, HIF_GPIO, RST_INT_OUT_N, SW_RST_OUT_N, STOP_CLK_IN, and STOP_CLK_OUT are all asynchronous to any clock.<Span/></_Body><_HeadingL3>4.6.1 JTAG and CTAP<_Body>The operation of the IEEE1149.1 JTAG port and CTAP are independent of the other device interfaces. They both have the same timing parameters.</_Body><_Body>The usual initialization and bootstrap sequence is summarized below.</_Body><_Body>The CSX700 is available in a 1,429 pin thermally-enhanced Ball Grid Array (BGA) package. Mechanical details are shown in <Link>Figure 23</Link> and <Link>Figure 24</Link>. </_Body><_Body/><_Body/><_Body>The available products are shown in the table below. These are the products planned for volume production. Contact your ClearSpeed representative to confirm availability of specific products and to check on new releases.<Span/></_Body><_Body>The device marking is made up of the following elements.</_Body><_Anchor>          <Span/></_Anchor></_HeadingL3></_HeadingL2></_z-Top-of-Form></_ListBullet1></TextSection></Article_A></Document></TaggedPDF-doc>