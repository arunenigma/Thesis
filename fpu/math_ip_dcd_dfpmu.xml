<?xml version="1.0" encoding="UTF-8" ?><!-- Created from PDF via Acrobat SaveAsXML --><!-- Mapping Table version: 28-February-2003 --><TaggedPDF-doc><?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>xml</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Tomasz Krzyzak</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Datasheet</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">DFPMU- 32-bit Floating Point Math Unit</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:CreateDate>2011-11-07T14:57:25+01:00</xmp:CreateDate>
         <xmp:CreatorTool>Microsoft® Word 2010 w wersji próbnej</xmp:CreatorTool>
         <xmp:ModifyDate>2011-11-07T14:57:25+01:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Microsoft® Word 2010 w wersji próbnej</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?><?xpacket end='r'?><Part><H1> </H1><H1>DFPMU-DP </H1><H1>Floating Point Coprocessor </H1><H1>Double Precision </H1><H1>v. 3.05 </H1><P>OVERVIEW </P><P>DFPMU-DP is a Floating Point Coprocessor, de-signed to assist CPU in performing the floating point mathematic computations. DFPMU-DP di-rectly replaces C software functions, by equivalent, very fast hardware operations, which significantly accelerate system performance. It doesn’t require any programming, so it also doesn’t require any modifications to be made in the main soft-ware. Everything is done automatically, during software compilation by the DFPMU-DP C driver.  </P><P>DFPMU-DP was designed to operate with DCD’s DP8051, but can also work with any other 8-, 16- and 32-bit processor. Drivers for all popular 8051 C compilers, are delivered together with the DFPMU-DP package. </P><P>DFPMU-DP uses the specialized CORDIC and standard algorithms, to compute math func-tions. It supports addition, subtraction, multiplica-tion, division, square root, comparison, and trigo-nometric functions: sine, cosine, tangent and arctangent. It has built-in conversion instruc-tions from integer type to floating point type and vice versa. The input numbers format is com-pliant with IEEE-754 standard. DFPMU-DP supports double and single precision real numbers, 8-bit, 16-bit,  32-bit and 52-bit integers. Each floating point function can be turned on/off at configura-tion level, providing flexible scalability of DFPMU-DP module. It allows to save silicon space and pro-vides exact configuration, required by certain ap-plications. </P><P>DFPMU-DP is a technology independent design, that can be implemented in a variety of process technologies. </P><P>APPLICATIONS </P><L><LI><LBody>● Math coprocessors </LBody></LI><LI><LBody>● DSP algorithms </LBody></LI><LI><LBody>● Embedded arithmetic coprocessor </LBody></LI><LI><LBody>● Fast data processing &amp; control </LBody></LI></L><P>KEY FEATURES </P><L><LI><LBody>● Direct replacement for C double, float soft-ware functions, such as: +, -, *, /,==, !=,&gt;=, &lt;=, &lt;, &gt;  </LBody></LI><LI><LBody>● Configurability of all available functions </LBody></LI><LI><LBody>● C interface supplied for all popular compilers: GNU C/C++, 8051 compilers </LBody></LI><LI><LBody>● No programming required </LBody></LI><LI><LBody>● IEEE-754 Double precision real format support – double type </LBody></LI><LI><LBody>● IEEE-754 Single precision real format support – float type </LBody></LI><LI><LBody>● 8-bit, 16-bit 32-bit and 52-bit integers format supported – integer types </LBody></LI><LI><LBody>● Flexible arguments and result registers loca-tion </LBody></LI><LI><LBody>● Performs the following functions: </LBody></LI><LI><LBody>○ FADD, FSUB – addition, subtraction </LBody></LI><LI><LBody>○ FMUL, FDIV – multiplication, division </LBody></LI><LI><LBody>○ FSQRT  – square root </LBody></LI><LI><LBody>○ FXAM  – examine input data </LBody></LI><LI><LBody>○ FUCOM  – comparison </LBody></LI><LI><LBody>○ FSIN, FCOS  – sine, cosine </LBody></LI><LI><LBody>○ FTAN  – tangent </LBody></LI><LI><LBody>○ FATAN  – arctangent </LBody></LI><LI><LBody>○ FCLD, FILD – 8-bit, 16-bit integer to double </LBody></LI><LI><LBody>○ FLLD, FELD  – 32-bit, 52-bit integer to double </LBody></LI><LI><LBody>○ FCST, FIST  – double to 8-bit, 16-bi integer </LBody></LI><LI><LBody>○ FLST, FEST  – double to 32-bit, 52-bit integer </LBody></LI><LI><LBody>○ FFLD – float to double </LBody></LI><LI><LBody>○ FFST – double to float </LBody></LI></L><L><LI><LBody>● Exceptions built-in routines </LBody></LI><LI><LBody>● Masks each exception indicator: </LBody></LI><LI><LBody>○ Precision lack PE </LBody></LI><LI><LBody>○ Underflow result UE </LBody></LI><LI><LBody>○ Overflow result OE </LBody></LI><LI><LBody>○ Invalid operand IE </LBody></LI><LI><LBody>○ Division by zero ZE </LBody></LI><LI><LBody>○ Denormal operand DE </LBody></LI><LI><LBody>● Fully configurable </LBody></LI><LI><LBody>● Fully synthesizable, static synchronous design with no internal tri-states  </LBody></LI></L><P>DELIVERABLES </P><L><LI><LBody>♦ Source code: </LBody></LI><LI><LBody>● VHDL Source Code or/and </LBody></LI><LI><LBody>● VERILOG Source Code or/and </LBody></LI><LI><LBody>● Encrypted Netlist or/and </LBody></LI><LI><LBody>● plain text EDIF netlist  </LBody></LI><LI><LBody>♦ VHDL &amp; VERILOG test bench environment </LBody></LI><LI><LBody>● Active-HDL automatic simulation macros </LBody></LI><LI><LBody>● NCSim automatic simulation macros </LBody></LI><LI><LBody>● ModelSim automatic simulation macros </LBody></LI><LI><LBody>● Tests with reference responses </LBody></LI><LI><LBody>♦ Technical documentation </LBody></LI><LI><LBody>● Installation notes </LBody></LI><LI><LBody>● HDL core specification </LBody></LI><LI><LBody>● Datasheet </LBody></LI><LI><LBody>♦ Synthesis scripts </LBody></LI><LI><LBody>♦ Example application </LBody></LI><LI><LBody>♦ Technical support </LBody></LI><LI><LBody>● IP Core implementation support </LBody></LI><LI><LBody>● 3 months maintenance </LBody></LI><LI><LBody>● Delivery the IP Core updates, minor  and major versions changes </LBody></LI><LI><LBody>● Delivery the documentation updates </LBody></LI><LI><LBody>● Phone &amp; email support </LBody></LI></L><P>LICENSING </P><P>Comprehensible and clearly defined licensing methods, without royalty-per-chip fees, make us-ing of IP Core easy and simple. </P><P>Single Site license option – it is dedicated for small and middle sized companies, running their busi-ness at one location. </P><P>Multi Sites license option – it is dedicated for corporate customers, running their business at several places. Licensed product can be used in selected company branches. In all cases, number of IP Core instantiation within a project and number of manufactured chips are unlimited. The license is royalty-per-chip free. There is no restrictions regarding the time of use. </P><P>There are two formats of delivered IP Core </P><L><LI><LBody>● VHDL, Verilog RTL synthesizable source code called HDL Source </LBody></LI><LI><LBody>● FPGA EDIF/NGO/NGD/QXP/VQM called Netlist </LBody></LI></L><P>SYMBOL </P><P> </P><Figure Alt=""><ImageData src="images/math_ip_dcd_dfpmu_img_0.jpg"/><P>cs </P><P>addr(4:2)2 </P><P>rst </P><P>clk </P><P>we </P><P>irq </P><P>datao(31:0)1 </P><P>datai(31:0)1 </P></Figure><P>PINS DESCRIPTION </P><Table><TR><TD><P>PIN </P></TD><TD><P>TYPE </P></TD><TD><P>DESCRIPTION </P></TD></TR><TR><TD><P> clk </P></TD><TD><P>Input </P></TD><TD><P> Global system clock </P></TD></TR><TR><TD><P> rst </P></TD><TD><P>Input </P></TD><TD><P> Global system reset </P></TD></TR><TR><TD><P> cs </P></TD><TD><P>Input </P></TD><TD><P> Chip select for read/write </P></TD></TR><TR><TD><P> datai[31:0]1 </P></TD><TD><P>Input </P></TD><TD><P> Data bus input </P></TD></TR><TR><TD><P> addr[4:2]2 </P></TD><TD><P>Input </P></TD><TD><P> Register  address to read/write </P></TD></TR><TR><TD><P> we </P></TD><TD><P>Input </P></TD><TD><P> Data write enable </P></TD></TR><TR><TD><P> datao[31:0]1 </P></TD><TD><P>Output </P></TD><TD><P> Data bus output </P></TD></TR><TR><TD><P> irq </P></TD><TD><P>Output </P></TD><TD><P> Interrupt request indicator </P></TD></TR></Table><P> </P><P>1 – data bus can be configured as 8-, 16- or 32- bit depends on processor’s bus size </P><P>2 – address bus is aligned to work with 8- (3:0), 16- (3:1) or 32- (4:2) bit processors </P><P>BLOCK DIAGRAM </P><P>Mantissa – performs operations on mantissa part of number. The addition, subtraction, multiplica-tion, division, square root, comparison and conver-sion operations are executed in this module. It contains mantissas and work registers. </P><P>CORDIC – performs trigonometric operations on input data. The sine, cosine, tangent and arctangent operations, are executed in this module. It contains three work registers. </P><P> </P><Figure Alt=""><ImageData src="images/math_ip_dcd_dfpmu_img_1.jpg"/><P>Shifter </P><P>Exponent </P><P>Control </P><P>Unit </P><P>clk </P><P>rst </P><P>datai(31:0)1 </P><P>datao(31:0)1 </P><P> </P><P>irq </P><P> </P><P>addr(4:2)2 </P><P>we </P><P>cs </P><P>Interface </P><P>CORDIC </P><P>Align </P><P>Mantissa </P></Figure><P>Exponent – performs operations on exponent part of number. The addition, subtraction, shifting, comparison and conversion operations, are exe-cuted in this module. It contains exponents and work registers. </P><P>Align – performs the numbers analysis against IEEE-754 standard compliance. Information about the data classes are passed as result to appropriate internal module. </P><P>Shifter –  performs mantissa shifting, during nor-malization and denormalization operations. Infor-mation about shifted-out bits are stored for round-ing process. </P><P>Control Unit –  manages execution of all instruc-tions and internal operation, required to execute particular function. </P><P>Interface –  makes interface between external device and DFPMU-DP internal 32-bit modules. It contains data, control and status registers. It can be configured to work with 8-, 16- and 32-bit pro-cessors. </P><P>PERFORMANCE </P><P>The following table gives a survey about the Core area and performance in ASIC devices (all key fea-tures have been included): </P><P> </P><Table><TR><TD><P>Technology </P></TD><TD><P>Optimization </P></TD><TD><P>Gates </P></TD><TD><P>Fmax </P></TD></TR><TR><TD><P>0.18 typical </P></TD><TD><P>area </P></TD><TD><P>29000 </P></TD><TD><P>100 MHz </P></TD></TR><TR><TD><P>0.18 typical </P></TD><TD><P>speed </P></TD><TD><P>35000 </P></TD><TD><P>300 MHz </P></TD></TR></Table><P>Core performance in ASIC devices </P><P>DFPMU-DP floating point instructions perfor-mance, has been compared to standard C library functions, delivered with every commercial C compiler. Each program was executed in the same system environments. Number of clock periods were measured between input data loading into work registers and output result storing after operation.  </P><P>The results are placed in the table below. Im-provement has been computed as number of: (NIOS-II CLK) divided by (NIOS-II+DFPMU-DP CLK), required to execute particular instruction. </P><Table><TR><TD><P>IEEE-754 FP Instruction </P></TD><TD><P>Improvement </P></TD></TR><TR><TD><P>Addition </P></TD><TD><P>12.0 </P></TD></TR><TR><TD><P>Subtraction </P></TD><TD><P>11.7 </P></TD></TR><TR><TD><P>Multiplication </P></TD><TD><P>10.6 </P></TD></TR><TR><TD><P>Division </P></TD><TD><P>15.0 </P></TD></TR><TR><TD><P>Square Root </P></TD><TD><P>21.5 </P></TD></TR><TR><TD><P>Sine </P></TD><TD><P>52.0 </P></TD></TR><TR><TD><P>Cosine </P></TD><TD><P>60.8 </P></TD></TR><TR><TD><P>Tangent </P></TD><TD><P>97.9 </P></TD></TR><TR><TD><P>Arcs Tangent </P></TD><TD><P>78.7 </P></TD></TR><TR><TD><P>Average speed improvement: </P></TD><TD><P>38.3 </P></TD></TR></Table><P>More details are available in the core documenta-tion. </P><P>The following table gives a survey about the 32-bit NIOS-II+DFPMU-DP performance, compared to 32-bit NIOS-II. </P><Table><TR><TD><P>Device </P></TD><TD><L><L><L><L><L><LI><LBody>1.1.1.1.1. IMPROVEMENT </LBody></LI></L></L></L></L></L></TD></TR><TR><TD><P>NIOS-II </P></TD><TD><P>      1.0 </P></TD></TR><TR><TD><P>NIOS-II+DFPMU (arithmetic) </P></TD><TD><P>      14.1 </P></TD></TR><TR><TD><P>NIOS-II+DFPMU (trigonometric) </P></TD><TD><P>72.4 </P></TD></TR><TR><TD><P>NIOS-II+DFPMU (overall) </P></TD><TD><P>     38.8 </P></TD></TR></Table><P> </P><Table><TR><TD><P>Device </P></TD><TD><L><L><L><L><L><LI><LBody>1.1.1.1.2. IMPROVEMENT </LBody></LI></L></L></L></L></L></TD></TR><TR><TD><P>32-bit RISC </P></TD><TD><P>      1.0 </P></TD></TR><TR><TD><P>32-bit RISC+DFPMU  </P><P>(arithmetic) </P></TD><TD><P>      14.1 </P></TD></TR><TR><TD><P>32-bit RISC+DFPMU  </P><P>(trigonometric) </P></TD><TD><P>72.4 </P></TD></TR><TR><TD><P>32-bit RISC+DFPMU (overall) </P></TD><TD><P>     38.8 </P></TD></TR></Table><P><InlineShape Alt="">110,272,438,80102030405032-bit NIOS-IINIOS-II+DFPMU-DP (arithmetic)NIOS-II+DFPMU-DP (trigonometric)NIOS-II+DFPMU-DP (overall)</InlineShape></P><P> </P><P>CONTACT </P><P>For any modification or special request, please  </P><P>contact Digital Core Design or local distributors. </P><P> </P><P>Headquarters: </P><P>Wroclawska 94 </P><P>41-902 Bytom, POLAND </P><P>e-mail: : <Link>info@dcd.pl</Link> </P><P>tel.     : +48 32 282 82 66 </P><P>fax     : +48 32 282 74 37 </P><P>Distributors: </P><P>Please check: http://dcd.pl/sales/ </P><P> </P></Part></TaggedPDF-doc>